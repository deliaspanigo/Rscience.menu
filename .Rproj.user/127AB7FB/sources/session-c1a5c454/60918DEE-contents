library(shiny)
library(yaml)

# Directorio con todos los YAMLs
yaml_dir <- "inst/yaml" # ajusta a tu ruta

# Función para leer todos los archivos YAML en la carpeta
cargar_todos_yaml <- function(dir_path) {
  archivos <- list.files(dir_path, pattern = "\\.yaml$", full.names = TRUE)
  lista <- list()
  for (arch in archivos) {
    nombre <- basename(arch)
    lista[[nombre]] <- yaml.load_file(arch)$choices
  }
  return(lista)
}

ui <- fluidPage(
  h3("Menús con datos cargados en memoria"),
  actionButton("reiniciar", "Reiniciar"),
  hr(),
  uiOutput("menu_ui"),
  verbatimTextOutput("texto_seleccion")
)

server <- function(input, output, session) {
  # Cargar todos los YAML al inicio en un reactiveValues
  menus_base <- reactiveVal(NULL)
  
  observeEvent(input$reiniciar, {
    # Carga inicial
    menus_base(cargar_todos_yaml(yaml_dir))
    # Reinicia el nivel actual
    nivel_actual("menu00.yaml")
    output$texto_seleccion <- renderText({"Menú reiniciado"})
  })
  
  # Inicializa en cargar al inicio
  observeEvent(TRUE, {
    menus_base(cargar_todos_yaml(yaml_dir))
    nivel_actual("menu00.yaml")
  }, once=TRUE)
  
  # Variable reactiva para nivel actual
  nivel_actual <- reactiveVal("menu00.yaml")
  
  # Mostrar el menú de acuerdo a nivel
  observeEvent(nivel_actual(), {
    todos <- menus_base()
    if (is.null(todos)) return()
    
    # Obtener el contenido del nivel actual
    choices_list <- todos[[nivel_actual()]]
    if (is.null(choices_list)) return()
    
    output$menu_ui <- renderUI({
      choices <- setNames(
        sapply(choices_list, function(c) c$choice_external),
        names(choices_list)
      )
      radioButtons("opcion", label=NULL, choices=choices)
    })
  })
  
  # Cuando seleccionas una opción
  observeEvent(input$opcion, {
    todos <- menus_base()
    if (is.null(todos)) return()
    choices_list <- todos[[nivel_actual()]]
    sel_id <- input$opcion
    if (is.null(choices_list) || is.null(todos[[nivel_actual()]])) return()
    
    efecto <- choices_list[[sel_id]]
    # Mostrar lo seleccionado
    output$texto_seleccion <- renderText({
      paste("Seleccionaste:", efecto$choice_external)
    })
    # Si tiene un archivo asociado, navegamos
    if (!is.null(efecto$file) && efecto$file != "NULL" && efecto$file != "") {
      nivel_actual(efecto$file)
    }
  })
}

shinyApp(ui, server)
