}
yaml_2_R <- function(choices){
# Extraer los vectores
vector_choice_external <- sapply(choices, function(x) x$choice_external)
vector_choice_internal <- sapply(choices, function(x) x$choice_internal)
vector_files <- sapply(choices, function(x) x$file)
vector_file_names <- tools::file_path_sans_ext(vector_files)
# Crear una lista con los vectores
resultado <- list(
choice_external = vector_choice_external,
choice_internal = vector_choice_internal,
vector_files = vector_files,
vector_file_names = vector_file_names
)
return(resultado)
}
dir_path <- file.path("inst", "yaml")
list_yaml <- cargar_todos_yaml(dir_path)
list_R    <- lapply(list_yaml, yaml_2_R)
list_R    <- lapply(list_R, function(x){
mi_list <- x
vector_files <- x$vector_files
vector_file_names <- x$vector_file_names
vector_files[vector_files == ""] <- NA
vector_file_names[vector_file_names == ""] <- NA
mi_list$vector_files <- vector_files
mi_list$vector_file_names <- vector_file_names
mi_list
})
list_df_R <- lapply(list_R, data.frame)
names(list_df_R) <- tools::file_path_sans_ext(names(list_df_R))
# En el UI
ui <- fluidPage(
titlePanel("Generador dinámico de selectInput"),
uiOutput("todos_selects")
)
# En el servidor
server <- function(input, output, session) {
# Asumiendo que ya tienes 'mis_listas' cargada con tus estructuras
# Aquí por ejemplo creamos dummy
mis_listas <- list_df_R
output$todos_selects <- renderUI({
ui_list <- lapply(names(list_df_R), function(x) {
selected_list <- list_df_R [[x]]
vector_choices <- selected_list$choice_internal
selectInput(paste0("sel_", x), paste("Selecciona en", X), vector_choices)
})
do.call(tagList, ui_list)
})
}
shinyApp(ui, server)
library(yaml)
library(tools)
cargar_todos_yaml <- function(dir_path) {
archivos <- list.files(dir_path, pattern = "\\.yaml$", full.names = TRUE)
lista <- list()
for (arch in archivos) {
nombre <- basename(arch)
lista[[nombre]] <- yaml.load_file(arch)$choices
}
return(lista)
}
yaml_2_R <- function(choices){
# Extraer los vectores
vector_choice_external <- sapply(choices, function(x) x$choice_external)
vector_choice_internal <- sapply(choices, function(x) x$choice_internal)
vector_files <- sapply(choices, function(x) x$file)
vector_file_names <- tools::file_path_sans_ext(vector_files)
# Crear una lista con los vectores
resultado <- list(
choice_external = vector_choice_external,
choice_internal = vector_choice_internal,
vector_files = vector_files,
vector_file_names = vector_file_names
)
return(resultado)
}
dir_path <- file.path("inst", "yaml")
list_yaml <- cargar_todos_yaml(dir_path)
list_R    <- lapply(list_yaml, yaml_2_R)
list_R    <- lapply(list_R, function(x){
mi_list <- x
vector_files <- x$vector_files
vector_file_names <- x$vector_file_names
vector_files[vector_files == ""] <- NA
vector_file_names[vector_file_names == ""] <- NA
mi_list$vector_files <- vector_files
mi_list$vector_file_names <- vector_file_names
mi_list
})
list_df_R <- lapply(list_R, data.frame)
names(list_df_R) <- tools::file_path_sans_ext(names(list_df_R))
# En el UI
ui <- fluidPage(
titlePanel("Generador dinámico de selectInput"),
uiOutput("todos_selects")
)
# En el servidor
server <- function(input, output, session) {
# Asumiendo que ya tienes 'mis_listas' cargada con tus estructuras
# Aquí por ejemplo creamos dummy
mis_listas <- list_df_R
output$todos_selects <- renderUI({
ui_list <- lapply(names(list_df_R), function(x) {
selected_list <- list_df_R [[x]]
vector_choices <- selected_list$choice_internal
selectInput(paste0("sel_", x), paste("Selecciona en", x), vector_choices)
})
do.call(tagList, ui_list)
})
}
shinyApp(ui, server)
# Instalar nuevamente
devtools::install()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
devtools::load_all()
Rscience.menu:::run_app()
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
remotes::install_github("deliaspanigo/Rscience.import")
devtools::install()
.rs.restartR()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::install()
.rs.restartR()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::install()
.rs.restartR()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
devtools::load_all()
Rscience.import:::run_app()
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::install()
.rs.restartR()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
devtools::load_all()
Rscience.import:::run_app()
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::install()
.rs.restartR()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::install()
.rs.restartR()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
devtools::install()
.rs.restartR()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
# Instalar nuevamente
devtools::install()
.rs.restartR()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::install()
.rs.restartR()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::install()
.rs.restartR()
# Instalar nuevamente
devtools::install()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::install()
.rs.restartR()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
# Instalar nuevamente
devtools::install()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
devtools::load_all()
Rscience.import:::run_app()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
# Limpiar el caché de devtools
devtools::clean_dll()
.rs.restartR()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
.rs.restartR()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
Rscience.import:::run_app()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
Rscience.import:::run_app()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
Rscience.import:::run_app()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
Rscience.menu:::run_app()
devtools::load_all()
devtools::build()     # Arma el paquete para mi
devtools::document()  # Actualiza documentación
Rscience.menu:::run_app()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
Rscience.import:::run_app()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
Rscience.menu:::run_app()
devtools::load_all()
devtools::load_all()
Rscience.import:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::load_all()
Rscience.import:::run_app()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::install()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
runApp('inst/shiny/myApp')
devtools::load_all()
Rscience.import:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
########################################
library(Rscience.menu)
Rscience.menu::run_app()
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
# Limpiar el caché de devtools
devtools::clean_dll()
.rs.restartR()
# Instalar nuevamente
devtools::install()
devtools::load_all()
devtools::document()  # Actualiza documentación
Rscience.import:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::load_all()
Rscience.import:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
# Limpiar el caché de devtools
devtools::clean_dll()
.rs.restartR()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::install()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
# Limpiar el caché de devtools
devtools::clean_dll()
.rs.restartR()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::install()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::install()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::install()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
# Limpiar el caché de devtools
devtools::clean_dll()
.rs.restartR()
devtools::install()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
devtools::load_all()
Rscience.import:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
######################################
# Desinstalar el paquete
remove.packages("Rscience.menu")
.rs.restartR()
devtools::install()
########################################
library(Rscience.menu)
Rscience.menu::run_app()
devtools::load_all()
Rscience.import:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
Rscience.import:::run_app()
devtools::load_all()
Rscience.menu:::run_app()
devtools::load_all()
devtools::document()  # Actualiza documentación
devtools::build()     # Arma el paquete para mi
devtools::load_all()
